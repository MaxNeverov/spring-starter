plugins {
    id 'java'
    id "io.freefair.lombok" version "8.13.1"
    //упаковщик в JAR assembleBootDist
    id 'application'

    //spring boot
    id "org.springframework.boot" version "2.7.18"
    id "io.spring.dependency-management" version "1.1.7"

    //ДЛЯ QUERYDSL
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'org.example'
version = '1.0-SNAPSHOT'

//путь главного класса для JAR
mainClassName = 'com.mndev.spring.ApplicationRunner'

repositories {
    mavenCentral()
}

//ДЛЯ QUERYDSL
configurations {
    querydsl.extendsFrom annotationProcessor, implementation, compileOnly, runtimeOnly, testImplementation
}


dependencies {
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-security"

    //отображение имени(данных) текущего пользователя, который прошел аутентификацию
    implementation "org.thymeleaf.extras:thymeleaf-extras-springsecurity5"


    //ДЛЯ QUERYDSL
    implementation "com.querydsl:querydsl-jpa"
    annotationProcessor "com.querydsl:querydsl-apt"

    //swagger - тестирование REST Controller
    //http://localhost:8080/swagger-ui/index.html
    implementation "org.springdoc:springdoc-openapi-ui:1.7.0"

    implementation "org.apache.tomcat.embed:tomcat-embed-jasper"
    implementation 'org.postgresql:postgresql'



    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //для тестов уже аутентифицированных пользователей
    testImplementation "org.springframework.security:spring-security-test"

    //для Docker
    testImplementation "org.testcontainers:postgresql:1.20.6"



}

//ДЛЯ QUERYDSL
querydsl{
    jpa = true
    library = "com.querydsl:querydsl-apt:5.0.0"
    querydslSourcesDir = "$buildDir/generated/sources/annotationProcessor/java/main"
}
//ДЛЯ QUERYDSL
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

test {
    useJUnitPlatform()
}